"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
a = {'Большевичка': 100000, 'Красный богатырь': 1500000, 'ЗИЛ': 50000, 'Резинотрест': 500000, 'Карагандауголь': 250000}


def top_3_company_profit(company_profit):  # O(N log N) - действия совершаются последовательно, самое "тяжелое" из них,
                                           # сортировка, имеет O(N log N), по нему и ставим общую сложность функции
    return list(dict(reversed(sorted(company_profit.items(), key=lambda x: x[1]))).keys())[:3]


def top_3_company_profit_2(company_profit):                                       # O(N)
    top_3_company_prof = []                                                       # O(1)
    i = 0                                                                         # O(1)
    while i < 3:                                                                  # O(1)
        top_3_company_prof.append(max(company_profit, key=company_profit.get))    # O(N)
        company_profit.pop(max(company_profit, key=company_profit.get))           # O(N)
        i += 1                                                                    # O(1)
    return top_3_company_prof                                                     # O(1)


if __name__ == '__main__':
    print(top_3_company_profit(a))
    print(top_3_company_profit_2(a))

# Вывод: функция №2 эффективнее, т.к. сложность алгоритма линейная, в отличие от №1, где она линейно-логарифмическая
