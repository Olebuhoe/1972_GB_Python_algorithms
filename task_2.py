"""
Задание 2.
Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.
Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.
Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""
from memory_profiler import profile

# Проблема при профилировании рекурсии заключается в том, что profile по своей сути является декоратором, который
# вызывается вместе с вызовом функции, а в  случае с рекурсией, которая вызывает сама себя несколько раз, соответственно
# и profile выдаст несколько таблиц, по количеству этих вызовов.
# Поэтому решением может быть простейшая обертка рекурсивной функции, которая отработает внутри нее, а profile выдаст
# одну таблицу по факту завершения выполнения обертки, внутри которой отработаются все шаги рекурсии


@profile
def wrapper_func(*args):
    def even_odd(num, x=0, y=0):
        if num < 1:
            return f'Количество четных и нечетных цифр в числе равно: ({x}, {y})'
        elif num % 10 % 2 == 0:
            x += 1
        else:
            y += 1
        return even_odd(num // 10, x, y)
    return even_odd(*args)


print(wrapper_func(12345))
